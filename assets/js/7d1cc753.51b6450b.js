"use strict";(self.webpackChunkneutralinojs_github_io=self.webpackChunkneutralinojs_github_io||[]).push([[5448],{793:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>a});var s=i(4848),o=i(8453);const d={title:"Neutralino.window",toc_max_heading_level:2},l=void 0,t={id:"api/window",title:"Neutralino.window",description:"The Neutralino.window namespace contains methods related to the current native window instance.",source:"@site/docs/api/window.md",sourceDirName:"api",slug:"/api/window",permalink:"/docs/api/window",draft:!1,unlisted:!1,editUrl:"https://github.com/neutralinojs/neutralinojs.github.io/edit/main/docs/api/window.md",tags:[],version:"current",frontMatter:{title:"Neutralino.window",toc_max_heading_level:2},sidebar:"docs",previous:{title:"Neutralino.updater",permalink:"/docs/api/updater"},next:{title:"Neutralino.resources",permalink:"/docs/api/resources"}},r={},a=[{value:"window.setTitle(title)",id:"windowsettitletitle",level:2},{value:"Parameters",id:"parameters",level:3},{value:"window.getTitle()",id:"windowgettitle",level:2},{value:"Return String (awaited):",id:"return-string-awaited",level:3},{value:"window.minimize()",id:"windowminimize",level:2},{value:"window.unminimize()",id:"windowunminimize",level:2},{value:"window.isMinimized()",id:"windowisminimized",level:2},{value:"Return Boolean (awaited):",id:"return-boolean-awaited",level:3},{value:"window.maximize()",id:"windowmaximize",level:2},{value:"window.unmaximize()",id:"windowunmaximize",level:2},{value:"window.isMaximized()",id:"windowismaximized",level:2},{value:"Return Boolean (awaited):",id:"return-boolean-awaited-1",level:3},{value:"window.setFullScreen()",id:"windowsetfullscreen",level:2},{value:"window.exitFullScreen()",id:"windowexitfullscreen",level:2},{value:"window.isFullScreen()",id:"windowisfullscreen",level:2},{value:"Return Boolean (awaited):",id:"return-boolean-awaited-2",level:3},{value:"window.show()",id:"windowshow",level:2},{value:"window.hide()",id:"windowhide",level:2},{value:"window.isVisible()",id:"windowisvisible",level:2},{value:"Return Boolean (awaited):",id:"return-boolean-awaited-3",level:3},{value:"window.focus()",id:"windowfocus",level:2},{value:"window.setAlwaysOnTop(onTop)",id:"windowsetalwaysontopontop",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"window.move(x, y)",id:"windowmovex-y",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"window.center()",id:"windowcenter",level:2},{value:"window.setIcon(icon)",id:"windowseticonicon",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"window.setDraggableRegion(domId, options)",id:"windowsetdraggableregiondomid-options",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"DraggableRegionOptions",id:"draggableregionoptions",level:3},{value:"Return Object (awaited):",id:"return-object-awaited",level:3},{value:"DraggableRegionExclusions",id:"draggableregionexclusions",level:3},{value:"window.unsetDraggableRegion(domId)",id:"windowunsetdraggableregiondomid",level:2},{value:"Parameters",id:"parameters-5",level:3},{value:"window.setSize(Options)",id:"windowsetsizeoptions",level:2},{value:"Options",id:"options",level:3},{value:"window.getSize()",id:"windowgetsize",level:2},{value:"Return Boolean (awaited):",id:"return-boolean-awaited-4",level:3},{value:"window.getPosition()",id:"windowgetposition",level:2},{value:"Return Boolean (awaited):",id:"return-boolean-awaited-5",level:3},{value:"window.snapshot(path)",id:"windowsnapshotpath",level:2},{value:"Parameters",id:"parameters-6",level:3},{value:"window.create(url, WindowOptions)",id:"windowcreateurl-windowoptions",level:2},{value:"Parameters",id:"parameters-7",level:3},{value:"WindowOptions",id:"windowoptions",level:3},{value:"Return Object (awaited):",id:"return-object-awaited-1",level:3},{value:"window.setMainMenu(menu)",id:"windowsetmainmenumenu",level:2},{value:"Parameters",id:"parameters-8",level:3},{value:"WindowMenuItem",id:"windowmenuitem",level:4},{value:"window.print()",id:"windowprint",level:2},{value:"window.beginDrag()",id:"windowbegindrag",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"Neutralino.window"})," namespace contains methods related to the current native window instance.\nThis namespace's methods will work only for the ",(0,s.jsx)(n.a,{href:"/docs/configuration/modes#window",children:(0,s.jsx)(n.code,{children:"window"})})," mode."]}),"\n",(0,s.jsx)(n.h2,{id:"windowsettitletitle",children:"window.setTitle(title)"}),"\n",(0,s.jsx)(n.p,{children:"Sets the title of the native window."}),"\n",(0,s.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"title"})," String (optional): Title of the window. Clears the title, if the function was called without the parameter."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.setTitle('New title');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowgettitle",children:"window.getTitle()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the title of the native window."}),"\n",(0,s.jsx)(n.h3,{id:"return-string-awaited",children:"Return String (awaited):"}),"\n",(0,s.jsx)(n.p,{children:"The current title of the native window instance."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let title = await Neutralino.window.getTitle();\nconsole.log(`title = ${title}`);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowminimize",children:"window.minimize()"}),"\n",(0,s.jsx)(n.p,{children:"Minimizes the native window."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.minimize();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowunminimize",children:"window.unminimize()"}),"\n",(0,s.jsx)(n.p,{children:"Restores the native window from the minimized state."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.unminimize();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowisminimized",children:"window.isMinimized()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns ",(0,s.jsx)(n.code,{children:"true"})," if the native window is minimized."]}),"\n",(0,s.jsx)(n.h3,{id:"return-boolean-awaited",children:"Return Boolean (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"})," based on current minimized status."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let status = await Neutralino.window.isMinimized();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowmaximize",children:"window.maximize()"}),"\n",(0,s.jsx)(n.p,{children:"Maximizes the native window."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.maximize();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowunmaximize",children:"window.unmaximize()"}),"\n",(0,s.jsx)(n.p,{children:"Restores the native window."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.unmaximize();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowismaximized",children:"window.isMaximized()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns ",(0,s.jsx)(n.code,{children:"true"})," if the native window is maximized."]}),"\n",(0,s.jsx)(n.h3,{id:"return-boolean-awaited-1",children:"Return Boolean (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"})," based on current maximized status."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let status = await Neutralino.window.isMaximized();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowsetfullscreen",children:"window.setFullScreen()"}),"\n",(0,s.jsx)(n.p,{children:"Enables the full screen mode."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.setFullScreen();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowexitfullscreen",children:"window.exitFullScreen()"}),"\n",(0,s.jsx)(n.p,{children:"Exits from the full screen mode."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.exitFullScreen();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowisfullscreen",children:"window.isFullScreen()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns ",(0,s.jsx)(n.code,{children:"true"})," if the native window is in the full screen mode."]}),"\n",(0,s.jsx)(n.h3,{id:"return-boolean-awaited-2",children:"Return Boolean (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"})," based on current full screen status."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let status = await Neutralino.window.isFullScreen();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowshow",children:"window.show()"}),"\n",(0,s.jsx)(n.p,{children:"Shows the native window."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.show();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowhide",children:"window.hide()"}),"\n",(0,s.jsx)(n.p,{children:"Hides the native window."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.hide();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowisvisible",children:"window.isVisible()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns ",(0,s.jsx)(n.code,{children:"true"})," if the native window is visible."]}),"\n",(0,s.jsx)(n.h3,{id:"return-boolean-awaited-3",children:"Return Boolean (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"})," based on current visibility status."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let status = await Neutralino.window.isVisible();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowfocus",children:"window.focus()"}),"\n",(0,s.jsx)(n.p,{children:"Focuses the native window."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.focus();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowsetalwaysontopontop",children:"window.setAlwaysOnTop(onTop)"}),"\n",(0,s.jsx)(n.p,{children:"Activates or deactivates the always on top mode.\xa0"}),"\n",(0,s.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onTop"})," Boolean (optional): Says whether the on top mode should be activated or not. The default value\nis ",(0,s.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.setAlwaysOnTop(true); // or setAlwaysOnTop();\nawait Neutralino.window.setAlwaysOnTop(false);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowmovex-y",children:"window.move(x, y)"}),"\n",(0,s.jsxs)(n.p,{children:["Moves the native window into given coordinates. Neutralinojs's cross-platform coordinate system starts from top-left corner of the screen.\nIn other words, ",(0,s.jsx)(n.code,{children:"x=0,y=0"})," point refers to the top-left corner of the device's main screen."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"x"})," Number: An integer value for the horizontal position."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"y"})," Number: An integer value for the vertical position."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.move(200, 400);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowcenter",children:"window.center()"}),"\n",(0,s.jsx)(n.p,{children:"Centers the native app window within the current display."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.center();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowseticonicon",children:"window.setIcon(icon)"}),"\n",(0,s.jsx)(n.p,{children:"Sets an icon for the native window or Dock.\xa0"}),"\n",(0,s.jsx)(n.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"icon"})," String: Path of the icon. A ",(0,s.jsx)(n.code,{children:"200x200"})," PNG image file works fine on all supported operating systems."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const icon = '/resources/icons/appIcon.png';\nawait Neutralino.window.setIcon(icon);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowsetdraggableregiondomid-options",children:"window.setDraggableRegion(domId, options)"}),"\n",(0,s.jsxs)(n.p,{children:["Converts a given DOM element to a draggable region. The user will be able to drag the native window by dragging the given DOM element. This feature is suitable to make custom window bars along with the ",(0,s.jsx)(n.a,{href:"../configuration/neutralino.config.json#modeswindowborderless-boolean",children:"borderless mode"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"domId"})," String | HTMLElement: A DOM element identifier."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"options"})," DraggableRegionOptions (optional): Customize the behavior of the draggable region."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"draggableregionoptions",children:"DraggableRegionOptions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exclusions"})," String[] | HTMLElement[] (optional): DOM element identifiers that should be excluded from the draggable region surface, i.e., window control buttons"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"return-object-awaited",children:"Return Object (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exclusions"})," DraggableRegionExclusions: Add or remove draggable region exclusions."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"draggableregionexclusions",children:"DraggableRegionExclusions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"add(...domIds: String | HTMLElement)"}),": Add new elements to exclusions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"remove(...domIds: String | HTMLElement)"}),": Remove elements from exclusions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"removeAll()"}),": Clear exclusions."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.setDraggableRegion('myCustomTitleBar');\n\nawait Neutralino.window.setDraggableRegion('myCustomTitleBar', {\n    exclusions: ['closeButton', 'helpButton']\n});\n\nconst d = await Neutralino.window.setDraggableRegion('myCustomTitleBar', {\n    exclusions: ['windowControls', 'tags']\n});\n\nd.exclusions.add('notifications');\nd.exclusions.remove('tags');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowunsetdraggableregiondomid",children:"window.unsetDraggableRegion(domId)"}),"\n",(0,s.jsx)(n.p,{children:"Converts a draggable region to a normal DOM elements by removing drag event handlers."}),"\n",(0,s.jsx)(n.h3,{id:"parameters-5",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"domId"})," String | HTMLElement: A DOM element identifier."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.unsetDraggableRegion('myCustomTitleBar');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowsetsizeoptions",children:"window.setSize(Options)"}),"\n",(0,s.jsx)(n.p,{children:"This method sets the size of the window."}),"\n",(0,s.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"width"})," Number (optional): Window width in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"height"})," Number (optional): Window height in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"minWidth"})," Number (optional): Minimum width of the window in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"minHeight"})," Number (optional): Minimum height of the window in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxWidth"})," Number (optional): Maximum width of the window in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxHeight"})," Number (optional): Maximum height of the window in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"resizable"})," Boolean (optional): A boolean value to make the window resizable or fixed."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This method always expects width and height couples.\nFor example, if you are setting ",(0,s.jsx)(n.code,{children:"minWidth"}),", you should set ",(0,s.jsx)(n.code,{children:"minHeight"})," too."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.setSize({\n    width: 500,\n    height: 200,\n    maxWidth: 600,\n    maxHeight: 400\n});\n\nawait Neutralino.window.setSize({\n    resizable: false\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowgetsize",children:"window.getSize()"}),"\n",(0,s.jsx)(n.p,{children:"Returns window size information."}),"\n",(0,s.jsx)(n.h3,{id:"return-boolean-awaited-4",children:"Return Boolean (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"width"})," Number: Window width in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"height"})," Number: Window height in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"minWidth"})," Number Minimum width of the window in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"minHeight"})," Number: Minimum height of the window in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxWidth"})," Number: Maximum width of the window in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxHeight"})," Number: Maximum height of the window in pixels."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"resizable"})," Boolean: Says whether the window resizable or fixed."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let sizeInfo = await Neutralino.window.getSize();\n\nconsole.log(sizeInfo);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowgetposition",children:"window.getPosition()"}),"\n",(0,s.jsx)(n.p,{children:"Returns window position coordinates."}),"\n",(0,s.jsx)(n.h3,{id:"return-boolean-awaited-5",children:"Return Boolean (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"x"})," Number: Horizontal coordinate of the left edge of the window."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"y"})," Number: Vertical coordinate of the top edge of the window."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let position = await Neutralino.window.getPosition();\n\nconsole.log(position);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowsnapshotpath",children:"window.snapshot(path)"}),"\n",(0,s.jsx)(n.p,{children:"Takes a snapshop of the current window client area (without the window frame) and stores as a PNG image file.\xa0"}),"\n",(0,s.jsx)(n.h3,{id:"parameters-6",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"path"})," String: Path where the snapshot PNG file should be stored."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.snapshot(NL_PATH + '/images/window.png');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowcreateurl-windowoptions",children:"window.create(url, WindowOptions)"}),"\n",(0,s.jsx)(n.p,{children:"Creates a native window. You can use this method to create new window for your multi-window Neutralinojs app.\nNeutralinojs spawns a new process for each native window. Therefore, the new window works as an isolated app once the window is created."}),"\n",(0,s.jsxs)(n.p,{children:["However, you can build communication streams between windows with the ",(0,s.jsx)(n.a,{href:"/docs/api/storage",children:"storage API"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"parameters-7",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"url"})," String: URL to be loaded. Eg: ",(0,s.jsx)(n.code,{children:"/resources/aboutWindow.html"}),". Supports loading both local and remote app resources. Local resource paths need to begin with ",(0,s.jsx)(n.code,{children:"/"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"options"})," (optional): an instance of ",(0,s.jsx)(n.code,{children:"WindowOptions"})," type."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"windowoptions",children:"WindowOptions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"title"})," String: Window title."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"icon"})," String: Window icon path."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullScreen"})," Boolean: Sets full screen mode."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"alwaysOnTop"})," Boolean: Activates the top-most mode."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enableInspector"})," Boolean: Activates developer tools and opens the web inspector window."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"borderless"})," Boolean: Makes the window borderless."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maximize"})," Boolean: Launches the window maximized."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"hidden"})," Boolean: Hides the window."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maximizable"})," Boolean: Makes the window maximizable or not."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exitProcessOnClose"})," Boolean: Exits the application process when the user clicks the window's close button."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"width"})," Number: Window width."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"height"})," Number: Window height."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"x"})," Number: Window ",(0,s.jsx)(n.code,{children:"x"})," position."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"y"})," Number: Window ",(0,s.jsx)(n.code,{children:"y"})," position."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"minWidth"})," Number: Minimum width of the window."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"minHeight"})," Number: Minimum height of the window."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxWidth"})," Number: Maximum width of the window."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxHeight"})," Number: Maximum height of the window."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"extendUserAgentWith"})," String: Extends the user agent string of the webview instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"injectGlobals"})," Boolean: Injects global variables directly to the webview instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"injectClientLibrary"})," Boolean: Injects the client library source directly to the webview instance."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"injectScript"})," Boolean: A preload JavaScript source file that executes before web app resources."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"processArgs"})," String: Additional command-line arguments for the new window process. Check all supported\ninternal command-line arguments from ",(0,s.jsx)(n.a,{href:"/docs/cli/internal-cli-arguments",children:"here"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"return-object-awaited-1",children:"Return Object (awaited):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pid"})," Number: Process identifier."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"stdOut"})," String: Standard output. This value is always empty since the new window process starts asynchronously."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"stdErr"})," String: Standard error. This value is always empty since the new window process starts asynchronously."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exitCode"})," Number: Exit code of the process."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.create('/resources/aboutWindow.html', {\n    icon: '/resources/icons/aboutIcon.png',\n    enableInspector: false,\n    width: 500,\n    height: 300,\n    maximizable: false,\n    exitProcessOnClose: true,\n    processArgs: '--window-id=W_ABOUT'\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowsetmainmenumenu",children:"window.setMainMenu(menu)"}),"\n",(0,s.jsx)(n.p,{children:"Creates/updates the main window menu on GNU/Linux and Windows and application menu on macOS."}),"\n",(0,s.jsx)(n.h3,{id:"parameters-8",children:"Parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"menu"})," WindowMenuItem[]: An array of ",(0,s.jsx)(n.code,{children:"WindowMenuItem"})," objects."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"windowmenuitem",children:"WindowMenuItem"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"})," String (optional): A unique identifier for each menu item."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"text"})," String: Label of the menu item. This field is a mandatory field. Use ",(0,s.jsx)(n.code,{children:"-"})," (hyphen) character for a menu separator."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isDisabled"})," Boolean (optional): A boolean flag to disable/enable a specific menu item."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isChecked"})," Boolean (optional): A boolean flag to mark a specific menu item as selected."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"menuItems"})," WindowMenuItem[]: Submenu for the current menu item."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"shortcut"})," String (optional): Sets a key accelerator on macOS (e.g., ",(0,s.jsx)(n.code,{children:"c"})," for ",(0,s.jsx)(n.code,{children:"Command + C"}),") and only displays the shortcut on GNU/Linux and Windows, e.g., ",(0,s.jsx)(n.code,{children:"Ctrl + C"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"action"})," String (optional): Pre-defined window action for macOS, i.e., ",(0,s.jsx)(n.code,{children:"cut:"}),", ",(0,s.jsx)(n.code,{children:"copy:"}),", ",(0,s.jsx)(n.code,{children:"paste:"}),", etc."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const menu = [\n  {id: 'file', text: 'File',\n    menuItems: [\n    {id: 'open', text: 'Open'},\n    {text: '-'},\n    {id: 'quit', text: 'Quit'},\n  ]},\n  {id: 'edit', text: 'Edit',\n    menuItems: [\n    {id: 'cut', text: 'Cut'},\n    {id: 'copy', text: 'Copy'},\n    {id: 'paste', text: 'Paste'},\n  ]}\n];\n\nawait Neutralino.window.setMainMenu(menu);\nawait Neutralino.on('mainMenuItemClicked', (evt) => {\n    console.log('Menu item:', evt.detail);\n}); \n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowprint",children:"window.print()"}),"\n",(0,s.jsxs)(n.p,{children:["Displays the native print dialog for the current page. Developers can use this function instead of the built-in web ",(0,s.jsx)(n.code,{children:"window.print()"})," function as a cross-platform solution\nsince macOS webview doesn't pre-implement ",(0,s.jsx)(n.code,{children:"window.print()"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.print();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"windowbegindrag",children:"window.beginDrag()"}),"\n",(0,s.jsx)(n.p,{children:"Starts dragging the native window if the left mouse button is pressed. The draggable region API in the Neutralinojs client library uses this function internally to move\nthe window with the pointer events web API."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"await Neutralino.window.beginDrag();\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>t});var s=i(6540);const o={},d=s.createContext(o);function l(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);